openapi: 3.0.0
info:
  title: exo6
  description: best practice for osa
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: localhost development
paths:
  /users/{id}:
    get:
      summary: get an user
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        "200":
          description: user finds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userprofile"
  /users:
    post:
      summary: create a many users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/createuserprofile"
      responses:
        "201":
          description: users was created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/userprofile"

  /users/{id}/personalinfo:
    put:
      summary: update personal information
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/personalinfo"
      responses:
        "200":
          description: personal information wa updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userprofile"

  /users/{id}/address:
    put:
      summary: update address
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/address"
      responses:
        "200":
          description: address was updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userprofile"
  /users/{id}/preferences:
    put:
      summary: update preferences
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/preferences"
      responses:
        "200":
          description: preferences was updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userprofile"
components:
  schemas:
    userprofile:
      type: object
      properties:
        identifier:
          type: string
        personalinfo:
          $ref: "#/components/schemas/personalinfo"
        address:
          $ref: "#/components/schemas/address"
        preferences:
          $ref: "#/components/schemas/preferences"
      required:
        - identifier
        - personalinfo
        - address
        - preferences
    createuserprofile:
      type: object
      properties:
        personalinfo:
          $ref: "#/components/schemas/personalinfo"
        address:
          $ref: "#/components/schemas/address"
        preferences:
          $ref: "#/components/schemas/preferences"
      required:
        - personalinfo
        - address
        - preferences
    personalinfo:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        birthdate:
          type: string
          format: date
        email:
          type: string
          format: email
      required:
        - first_name
        - last_name
        - email
    address:
      type: object
      properties:
        address_street:
          type: string
        address_city:
          type: string
        address_country:
          type: string
        address_postal_code:
          type: integer
      required:
        - address_street
        - address_city
        - address_country
        - address_postal_code
    preferences:
      type: object
      properties:
        needs_newsletter:
          type: boolean
        language:
          type: string
          enum: [mg, fr, eng]
      required:
        - needs_newsletter
        - language
